apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
    version: 8.0.28
  ports:
    - name: 3306-3306
      port: 3306
      targetPort: 3306
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      version: 8.0.28
  strategy:
    type: Recreate
  template:
    metadata:
      name: mysql
      labels:
        app: mysql
        version: 8.0.28
    spec:
      volumes:
        - name: mysql-pv-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
      containers:
        - name: mysql
          image:  mysql/mysql-server:8.0.28
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: mysql_root_password
          ports:
            - containerPort: 3306
              name: mysql-port
          volumeMounts:
            - mountPath: "/var/lib/mysql/"
              name: mysql-pv-storage
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: "1000m"
              memory: "1Gi"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            exec:
              command:
                - sh
                - "-c"
                - |
                  mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
#          readinessProbe:
#            exec:
#              command:
#                - sh
#                - "-c"
#                - "mysql -h ${mysql} -uroot -p${MYSQL_ROOT_PASSWORD} -e'SELECT 1'"
#            initialDelaySeconds: 5
#            periodSeconds: 2
#            timeoutSeconds: 5
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: dev
data:
  initdb.sql: |
    # create databases
    CREATE DATABASE IF NOT EXISTS `employee`;
    CREATE DATABASE IF NOT EXISTS `department`;

    # create root user and grant rights
    GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION;