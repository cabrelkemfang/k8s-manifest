apiVersion: v1
kind: Service
metadata:
  name: employee
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  namespace: dev
spec:
  selector:
    app: employee
    version: 1.0.0
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  namespace: dev
  labels:
    app: employee
spec:
  replicas: 1
  selector:
    matchLabels:
      app: employee
      version: 1.0.0
  template:
    metadata:
      name: employee
      labels:
        app: employee
        version: 1.0.0
    spec:
      containers:
        - name: employee
          image: cabrelkemfang/employee-service:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
              name: employee-port
          resources:
            requests:
              cpu: "200m"
              memory: "0.5Gi"
            limits:
              memory: "1Gi"
          livenessProbe:
            httpGet:
              port: employee-port
              path: /api/v1/actuator/health/liveness
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 50
          readinessProbe:
            httpGet:
              port: employee-port
              path: /api/v1/actuator/health/readiness
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 50
          env:
            - name: JDBC_URL
              value: jdbc:mysql://mysql:3306/employee
            - name: DRIVER_CLASS_NAME
              valueFrom:
                configMapKeyRef:
                  key: DRIVER_CLASS_NAME
                  name: api-configmap
            - name: JPA_DIALECT
              valueFrom:
                configMapKeyRef:
                  key: JPA_DIALECT
                  name: api-configmap
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: mysql_user
                  name: api-secret
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql_root_password
                  name: api-secret
