apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-storageclass
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
allowVolumeExpansion: true
parameters:
  type: pd-balanced

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    type: local
spec:
  storageClassName: fast-storageclass
  capacity:
    storage: 200Mi
  accessModes:
    - ReadWriteMany
  gcePersistentDisk:
    pdName: my-persistent-disk
    fsType: ext4

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  storageClassName: fast-storageclass
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      version: 8.0.28
  strategy:
    type: Recreate
  template:
    metadata:
      name: mysql
      labels:
        app: mysql
        version: 8.0.28
    spec:
      volumes:
        - name: mysql-pv-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
      containers:
        - name: mysql
          image:  mysql/mysql-server:8.0.28
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: MYSQL_USER
          ports:
            - containerPort: 3306
              name: mysql-port
          volumeMounts:
            - name: mysql-pv-storage
              mountPath: "/var/lib/mysql/"
              
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: "250m"
              memory: "200Mi"
            limits:
              memory: "200Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - sh
                - "-c"
                - |
                  mysqladmin -u$MYSQL_USER -p$MYSQL_ROOT_PASSWORD ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 4
          readinessProbe:
            exec:
              command:
                - sh
                - "-c"
                - "mysql -u${MYSQL_USER} -p${MYSQL_ROOT_PASSWORD} -e'SELECT 1'"
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 5
            failureThreshold: 4